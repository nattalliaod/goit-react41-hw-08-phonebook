{"version":3,"file":"static/js/71.20ad30e8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","redux/filter/filterSelector.js","hooks/useFilter.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","hooks/useModal.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/App/App.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { useFetchContactsQuery, useAddContactMutation } from 'redux/contacts/contactSlice';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Phonebook, LabelName, InputContact, AddUser } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n  const [addContact, { error }] = useAddContactMutation();\n  const { data } = useFetchContactsQuery();\n\n  useEffect(() => {\n    if (error) { \n      toast.error(`${error.status} ${error.data.msg}`)\n    } \n  }, [error]);\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (data.map(contact => contact.name).includes(name)) {\n      toast.error(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    addContact({ name, number });\n    reset();\n    toast.success('Contact has been added')\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n      <Phonebook onSubmit={handleSubmit}>\n        <LabelName>\n          Name\n          <InputContact\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </LabelName>\n\n        <LabelName>\n          Number\n          <InputContact\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={(e) => setNumber(e.target.value)}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </LabelName>\n\n        <AddUser type='submit'>Add contact</AddUser>\n      </Phonebook>\n    );\n}","export const getFilter = state => state.filter.value;","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filter/filterSelector';\nimport { filterContact } from 'redux/filter/filterSlice';\n\nexport const useFilter = () => {\n    const dispatch = useDispatch();\n    \n    const value = useSelector(getFilter);\n    const filter = el => dispatch(filterContact(el));\n\n      return {\n        value,\n        filterContact: filter,\n    };\n}","import styled from \"@emotion/styled\";\n\nexport const Text = styled.label`\ndisplay: flex;\n  flex-direction: column;\n  width: 400px;\n  font-weight: 500;\n  margin: auto;\n  margin-bottom: 15px;\n`;\n\nexport const FindContact = styled.input`\npadding: 10px 20px;\n  border: 1px solid blueviolet;\n  background-color: lightgray;\n  border-radius: 5px;\n  :focus {\n  outline: transparent;\n  border: 1px solid blue;\n}\n`;","import { useFilter } from 'hooks/useFilter';\nimport { Text, FindContact } from './Filter.styled';\n\nexport const Filter = () => {\n    const {value, filterContact} = useFilter();\n    return (\n        <>\n            <Text>\n                Find contacts by name\n                <FindContact\n                    type=\"text\"\n                    name=\"filter\"\n                    value={value}\n                    onChange={e => filterContact(e.target.value)}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </Text>\n        </>\n    );\n}\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { FiEdit3 } from 'react-icons/fi';\nimport { toast } from 'react-hot-toast';\nimport { useDeleteContactMutation } from \"redux/contacts/contactSlice\";\nimport { Spinner } from \"components/Loader/Loader\";\nimport { ContactName, ContactNumber, ContactButton } from \"./ContactItem.styled\"\nimport { EditContactModal } from 'components/EditContactModal/EditContactModal';\nimport { useModal } from 'hooks/useModal';\n\nexport const ContactItem = ({ id, name, number }) => {\n    const navigate = useNavigate();\n    const { isModalOpen, openModal, closeModal } = useModal();\n    const [deleteContact, { isLoading }] = useDeleteContactMutation();\n    \n    useEffect(() => {\n        if (isLoading) toast(`Contact deleting...`)\n    }, [isLoading]);\n    \n    return (\n        <>\n            <ContactName>{name}:</ContactName>\n            <ContactNumber href={`tel:${number}`}>{number}</ContactNumber>\n            <ContactButton type='button' onClick={() => {\n                navigate(`/contacts/${id}`, openModal())\n            }}>\n                <FiEdit3 />\n            </ContactButton>\n            <ContactButton type='button' onClick={() => deleteContact(id)} disabled={isLoading}>\n                {isLoading ? <Spinner width={10} height={10} /> : <RiDeleteBin6Line />}\n            </ContactButton>\n            {isModalOpen && <EditContactModal onEdit={closeModal} />}\n        </>\n    );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import { useState } from 'react';\n\nexport const useModal = (initialState = false) => {\n  const [isModalOpen, setIsModalOpen] = useState(initialState);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  return { isModalOpen, openModal, closeModal };\n};","import styled from \"@emotion/styled\";\n\nexport const Contacts = styled.ul`\nwidth: 500px;\n  text-align: center;\n  margin: auto;\n`;\n\nexport const ContactName = styled.li`\ndisplay: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px solid #0e0e5a;\n  border-radius: 5px;\n  margin: 3px;\n  padding: 7px;\n`;","import { useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useFetchContactsQuery } from 'redux/contacts/contactSlice';\nimport { useFilter } from 'hooks/useFilter';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Spinner } from 'components/Loader/Loader';\nimport { Contacts, ContactName } from './ContactList.styled';\n\nexport const ContactList = () => {\n    const { data: contacts, isFetching, error } = useFetchContactsQuery();\n    const { value } = useFilter();\n\n    useEffect(() => {\n        if (error) {\n            toast.error(`${error.status} ${error.data.msg}`)\n        }\n    }, [error]);\n    \n    return (\n        <>\n            {isFetching && <Spinner />}\n            <Contacts>\n                {contacts && contacts\n                    .filter(el =>\n                        el.name.toUpperCase().includes(value.toUpperCase()))\n                    .map(({ id, name, number }) =>\n                    <ContactName key={id}>\n                        <ContactItem id={id} name={name} number={number} />\n                    </ContactName>)}\n            </Contacts>\n        </>\n    );\n}\n\n","import styled from \"@emotion/styled\";\n\nexport const SectionContainer = styled.section`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-right: 15px;\n  padding-left: 15px;\n`;","import PropTypes from 'prop-types';\nimport { SectionContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n    return (\n        <SectionContainer>{children}</SectionContainer>\n    )\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n}","import styled from \"@emotion/styled\";\n\nexport const MainText = styled.h1`\n margin-bottom: 15px;\n  margin-top: 20px;\n  text-align: center;\n  color: #073963;\n`;\n\nexport const Text = styled.h2`\n  margin-top: 25px;\n  text-align: center;\n  color: #073963;\n`;","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Container } from \"components/Container/Container\";\nimport { MainText, Text } from \"components/App/App.styled\";\nconst ContactsPage = () => {\n    return (\n        <>\n            <Container>\n                <MainText>Phonebook</MainText>\n                <ContactForm />\n            </Container>\n\n            <Container>\n                <Text>Contacts</Text>\n                <Filter />\n                <ContactList />\n            </Container>\n        </>\n    );\n}\n\nexport default ContactsPage;"],"names":["ContactForm","useState","name","setName","number","setNumber","useAddContactMutation","addContact","error","data","useFetchContactsQuery","useEffect","toast","status","msg","reset","onSubmit","e","preventDefault","map","contact","includes","type","value","onChange","target","pattern","title","required","getFilter","state","filter","useFilter","dispatch","useDispatch","useSelector","filterContact","el","Text","styled","FindContact","Filter","ContactItem","id","navigate","useNavigate","initialState","isModalOpen","setIsModalOpen","openModal","closeModal","useModal","useDeleteContactMutation","deleteContact","isLoading","href","onClick","disabled","width","height","EditContactModal","onEdit","Contacts","ContactName","ContactList","contacts","isFetching","toUpperCase","SectionContainer","Container","children","MainText"],"sourceRoot":""}